/*
 * File: app/view/CpTestList.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.CpTestList', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.cptestlist',

    draggable: true,
    frame: true,
    height: 430,
    width: 456,
    resizable: true,
    closable: false,
    collapsed: false,
    collapsible: false,
    header: true,
    title: 'サーバ一覧',
    forceFit: true,
    store: 'MyJsonPStore2',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 41,
                    dataIndex: 'id',
                    text: 'id'
                },
                {
                    xtype: 'gridcolumn',
                    width: 53,
                    dataIndex: 'Song',
                    text: 'song'
                },
                {
                    xtype: 'gridcolumn',
                    width: 63,
                    dataIndex: 'Rating',
                    text: 'rating'
                },
                {
                    xtype: 'gridcolumn',
                    width: 63,
                    dataIndex: 'Genre',
                    text: 'grane'
                },
                {
                    xtype: 'gridcolumn',
                    width: 63,
                    dataIndex: 'Artist',
                    text: 'artist'
                },
                {
                    xtype: 'gridcolumn',
                    width: 63,
                    dataIndex: 'Year',
                    text: 'year'
                }
            ],
            viewConfig: {
                styleHtmlContent: false,
                autoScroll: false
            }
        });

        me.callParent(arguments);
    }

});